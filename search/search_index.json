{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Clipper","text":"<p>Clipper is a Python CLI tool for generating images using prompts via the <code>webui_forge</code> backend.</p> <p>This documentation will walk you through installing, using, and configuring Clipper.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>\ud83d\uddbc Generate images from single prompts or batch files</li> <li>\u2699\ufe0f Fully configurable via <code>clipper_config.json</code></li> <li>\ud83e\udde0 Logs prompts and metadata to <code>prompt_log.jsonl</code></li> <li>\ud83e\uddea Tested CLI with <code>pytest</code></li> <li>\ud83d\ude80 Built for local and automated workflows</li> </ul>"},{"location":"#quick-start","title":"Quick Start","text":"<ol> <li> <p>Install Clipper:    ```bash    pip install clipper-ai ````</p> </li> <li> <p>Generate an image:</p> </li> </ol> <pre><code>clipper --prompt \"A futuristic robot walking in a neon city\"\n</code></pre> <ol> <li>View output in the <code>generated_images/</code> folder</li> </ol>"},{"location":"#about-this-project","title":"About This Project","text":"<p>Clipper is part of the Applied AI toolset \u2014 projects focused on amplifying creation using AI, prompt engineering, and real-world coding workflows.</p> <p>It was built as part of an iterative development process, blending human creativity and AI support to rapidly build functional tools.</p> <pre><code>Let me know if you'd like the other pages printed too (like `usage.md`, `config.md`, or `development.md`).\n</code></pre> <p>Note: Clipper depends on <code>webui_forge</code>, a modified Stable Diffusion Web UI backend. You must have it running locally at <code>http://127.0.0.1:7860</code> for image generation to work.</p>"},{"location":"config/","title":"Configuration Reference","text":"<p>Clipper uses a JSON configuration file to control how images are generated via the <code>webui_forge</code> backend.</p> <p>You can pass a config file using the <code>--config</code> flag:</p> <pre><code>clipper --prompts prompts.txt --config clipper_config.json\n````\n\n---\n\n## \ud83d\udd27 Example `clipper_config.json`\n\n```json\n{\n  \"steps\": 40,\n  \"width\": 512,\n  \"height\": 512,\n  \"cfg_scale\": 7.5,\n  \"delay\": 2\n}\n</code></pre>"},{"location":"config/#config-options","title":"\ud83d\udd0d Config Options","text":"Key Type Description <code>steps</code> <code>int</code> Number of inference steps (e.g., 20\u201350) <code>width</code> <code>int</code> Output image width in pixels <code>height</code> <code>int</code> Output image height in pixels <code>cfg_scale</code> <code>float</code> Classifier-Free Guidance scale \u2014 how closely to follow the prompt <code>delay</code> <code>int</code> Delay (in seconds) between prompts in batch mode"},{"location":"config/#default-behavior","title":"\ud83d\udcc1 Default Behavior","text":"<p>If no config file is provided, Clipper uses built-in defaults:</p> <ul> <li>steps: 30</li> <li>width: 512</li> <li>height: 512</li> <li>cfg_scale: 7.5</li> <li>delay: 1</li> </ul> <p>You can override any of these by passing a custom config file.</p>"},{"location":"development/","title":"Developer Guide","text":"<p>This guide helps contributors and developers work on Clipper locally.</p>"},{"location":"development/#local-development-setup","title":"\ud83d\udee0 Local Development Setup","text":"<ol> <li>Clone the repository:</li> </ol> <pre><code>git clone https://github.com/yourusername/clipper.git\ncd clipper\n````\n\n2. Create a virtual environment and activate it:\n\n```bash\npython -m venv venv\nsource venv/bin/activate        # On Windows: venv\\Scripts\\activate\n</code></pre> <ol> <li>Install the package in editable mode with development dependencies:</li> </ol> <pre><code>pip install -e .[dev]\n</code></pre>"},{"location":"development/#run-tests","title":"\ud83e\uddea Run Tests","text":"<p>Clipper uses <code>pytest</code> for testing.</p> <p>To run all tests:</p> <pre><code>pytest\n</code></pre> <p>To run only unit tests (skip integration):</p> <pre><code>pytest -m \"not integration\"\n</code></pre> <p>To run integration tests:</p> <pre><code>CLIPPER_ENABLE_INTEGRATION=1 pytest\n</code></pre>"},{"location":"development/#building-and-uploading","title":"\ud83d\udce6 Building and Uploading","text":"<p>To build the distribution:</p> <pre><code>python -m build\n</code></pre> <p>To upload to PyPI:</p> <pre><code>twine upload dist/*\n</code></pre> <p>Or to test it on TestPyPI:</p> <pre><code>twine upload --repository-url https://test.pypi.org/legacy/ dist/*\n</code></pre>"},{"location":"development/#project-structure","title":"\ud83e\uddf1 Project Structure","text":"<pre><code>clipper/\n\u251c\u2500\u2500 __main__.py     \u2190 CLI entry point\n\u251c\u2500\u2500 core.py         \u2190 Main Clipper logic\n\u251c\u2500\u2500 config.py       \u2190 Config loader\n\u251c\u2500\u2500 prompts.py      \u2190 Prompt file utilities\n\u251c\u2500\u2500 utils.py        \u2190 Logging &amp; helper functions\ntests/\n\u251c\u2500\u2500 test_cli.py     \u2190 CLI integration tests\n\u251c\u2500\u2500 test_core.py    \u2190 Unit tests for core logic\ngenerated_images/   \u2190 Output folder\nprompt_log.jsonl    \u2190 Log of all prompts &amp; metadata\n</code></pre>"},{"location":"development/#contributions","title":"\u2705 Contributions","text":"<ul> <li>Feel free to open issues or PRs</li> <li>Style guide: keep it Pythonic + documented</li> <li>Use clear commit messages and test your changes</li> </ul> <p>Thanks for helping improve Clipper-AI!</p>"},{"location":"usage/","title":"Usage Guide","text":"<p>Clipper is a CLI tool that generates images by sending prompts to a running instance of <code>webui_forge</code>.</p>"},{"location":"usage/#generate-from-a-single-prompt","title":"\ud83d\uddbc Generate from a Single Prompt","text":"<pre><code>clipper --prompt \"A futuristic robot walking in a neon city\"\n````\n\nThis will:\n\n* Call the configured web backend (`http://127.0.0.1:7860`)\n* Save the resulting image in `generated_images/`\n* Log the prompt in `prompt_log.jsonl`\n\n---\n\n## \ud83d\udcc4 Generate from a Prompt File\n\n```bash\nclipper --prompts prompts.txt\n</code></pre> <p>Each line in <code>prompts.txt</code> should be a separate text prompt. The tool will:</p> <ul> <li>Loop through the list</li> <li>Generate one image per line</li> <li>Sleep between prompts (default: 2 seconds)</li> </ul>"},{"location":"usage/#using-a-custom-config","title":"\u2699\ufe0f Using a Custom Config","text":"<pre><code>clipper --prompts prompts.txt --config custom_config.json\n</code></pre> <p>The config file lets you control:</p> <ul> <li>Output resolution</li> <li>Inference steps</li> <li>CFG scale</li> <li>Delay between prompts</li> </ul> <p>See the Configuration page for details.</p>"},{"location":"usage/#using-clipper-from-python","title":"\ud83d\udc0d Using Clipper from Python","text":"<p>You can use Clipper as a library inside any Python script:</p> <pre><code>from clipper.core import Clipper\nfrom clipper.config import load_config\n\n# Load default config\nconfig = load_config()\n\n# Create the Clipper engine\nengine = Clipper(config=config)\n\n# Run a single prompt\nengine.generate_image(\"A serene sunset over a futuristic city\")\n\n# Run a batch\nprompts = [\"A glowing forest at night\", \"A dragon flying over the mountains\"]\nengine.run_batch(prompts)\n</code></pre>"},{"location":"usage/#advanced-usage","title":"\u26a1 Advanced Usage","text":""},{"location":"usage/#setting-a-random-seed","title":"\ud83d\udd01 Setting a Random Seed","text":"<p>You can modify the config to set a deterministic seed per run:</p> <pre><code>{\n  \"seed\": 42,\n  \"steps\": 30,\n  \"width\": 512,\n  \"height\": 512\n}\n</code></pre> <p>Setting a seed ensures repeatable results across runs.</p>"},{"location":"usage/#changing-the-backend-url","title":"\ud83c\udf10 Changing the Backend URL","text":"<p>By default, Clipper sends prompts to <code>http://127.0.0.1:7860</code>. To override this, pass a custom <code>backend_url</code> in the config:</p> <pre><code>{\n  \"backend_url\": \"http://localhost:7860\",\n  \"steps\": 20\n}\n</code></pre> <p>You can use this to point to:</p> <ul> <li>A remote server</li> <li>A Docker container</li> <li>A modified SD backend</li> </ul>"},{"location":"usage/#custom-output-directory","title":"\ud83d\udcc1 Custom Output Directory","text":"<p>To change where images are saved:</p> <pre><code>{\n  \"output_dir\": \"my_results/\"\n}\n</code></pre> <p>This is useful if you want to separate runs by topic or project.</p>"},{"location":"usage/#output-files","title":"\ud83d\udcc2 Output Files","text":"File Description <code>generated_images/</code> All output images go here (unless overridden) <code>prompt_log.jsonl</code> One JSON line per prompt/image <code>clipper_config.json</code> Optional config file with generation settings"},{"location":"usage/#requirements","title":"\ud83e\udde0 Requirements","text":"<ul> <li>A working instance of <code>webui_forge</code> running locally at <code>http://127.0.0.1:7860</code></li> <li>Python 3.10+</li> <li>Installed package via <code>pip install clipper-ai</code></li> </ul>"}]}